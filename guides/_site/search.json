[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ACM Guides",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for the Spring semester of the 2024-2025 academic year! This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in Computer and Information Science (CIS) courses get set up with the necessary tools and software for their classes.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\nBelow are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities.\n\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\n\n\n\n\n\n\n\n\n\n\nasdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\n\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere.\n\n\n\n\n\n\n\n\nStart your installations early to avoid last-minute issues.\nRefer to ACM SOS Week sessions for setup help.\nFollow your instructor’s course syllabus for specific software requirements."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 101 - Data Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 101 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\n\nGo to GitHub and create an account if you don’t already have one.\nConfirm your email address and set up two-factor authentication for security.\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nInstall Discord and create an account.\nJoin the course-specific Discord server using the invite link provided by your instructor.\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to install.\n\n\n\n\n\nInstall Sublime Text using the following commands:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update && sudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nDrag the Sublime Text icon into the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload Git from git-scm.com.\nFollow the installation wizard and ensure you select “Use Git from the Windows Command Prompt”.\nVerify installation by running:\ngit --version\n\n\n\n\n\n\n\n\n\n\nDownload Python from the official website.\nRun the installer and ensure the option “Add Python to PATH” is selected.\nVerify installation:\npython --version\n\n\n\n\n\n\n\n\n\n\nInstall Poetry by running the official script:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nInstall Gatorgrade using pip:\npip install gatorgrade\nVerify installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nGenerate an SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key:\nssh-add ~/.ssh/id_ed25519\nCopy the public key:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account under SSH Settings.\n\n\n\n\n\n\n\nFor more details, refer to the official course software installation guide.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 101 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for the Spring semester of the 2024-2025 academic year! This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in Computer and Information Science (CIS) courses get set up with the necessary tools and software for their classes.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\nBelow are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities.\n\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "ACM Guides",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for the Spring semester of the 2024-2025 academic year! This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in Computer and Information Science (CIS) courses get set up with the necessary tools and software for their classes.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\nBelow are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities."
  },
  {
    "objectID": "index.html#all-programs-alphabetical-order",
    "href": "index.html#all-programs-alphabetical-order",
    "title": "ACM Guides",
    "section": "",
    "text": "asdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\nWindows: 1. Download Git from git-scm.com and run the installer. 2. During installation, select “Use Git from the Windows Command Prompt”. 3. Verify the installation: - Open Command Prompt and type: git --version\nLinux (Ubuntu): 1. Install Git using Terminal: sudo apt update && sudo apt install git 2. Verify the installation: git --version\nmacOS: 1. Install Git using Homebrew: brew install git 2. Verify the installation: git --version\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source: 1. Update your system packages by running: sudo apt update && sudo apt upgrade 2. Install the necessary dependencies with: sudo apt install -y build-essential libssl-dev zlib1g-dev \\    libncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\    libffi-dev curl libbz2-dev 3. Download the source code for Python 3.12.5 from the official website: curl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz 4. Extract the downloaded tarball and navigate into the directory: tar -xf Python-3.12.5.tgz    cd Python-3.12.5 5. Build and install Python: ./configure --enable-optimizations    make -j$(nproc)    sudo make altinstall Note: Use altinstall to avoid overwriting the system’s default Python. 6. Verify the installation by typing: python3.12 --version Ensure it outputs Python 3.12.5.\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note: Python 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\n\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder.\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere."
  },
  {
    "objectID": "index.html#tips-for-students",
    "href": "index.html#tips-for-students",
    "title": "ACM Guides",
    "section": "",
    "text": "Start your installations early to avoid last-minute issues.\nRefer to ACM SOS Week sessions for setup help.\nFollow your instructor’s course syllabus for specific software requirements."
  },
  {
    "objectID": "index.html#acm-required-software",
    "href": "index.html#acm-required-software",
    "title": "ACM Guides",
    "section": "",
    "text": "Download Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "index.html#all-programs",
    "href": "index.html#all-programs",
    "title": "ACM Guides",
    "section": "",
    "text": "asdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\n\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere."
  },
  {
    "objectID": "posts/welcome/index.html#required-software",
    "href": "posts/welcome/index.html#required-software",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "Required Software",
    "text": "Required Software\n\n1. GitHub\n\nGo to GitHub and create an account if you don’t already have one.\nConfirm your email address and set up two-factor authentication for security.\n\n\n\n2. Discord\n\nDownload Discord from the official website.\nInstall Discord and create an account.\nJoin the course-specific Discord server using the invite link provided by your instructor.\n\n\n\n3. Sublime Text 4\n\nWindows:\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to install.\n\n\n\nLinux (Ubuntu):\n\nInstall Sublime Text using the following commands:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update && sudo apt install sublime-text\n\n\n\nmacOS:\n\nDownload Sublime Text from the official website.\nDrag the Sublime Text icon into the Applications folder.\n\n\n\n\n4. Git\n\nWindows:\n\nDownload Git from git-scm.com.\nFollow the installation wizard and ensure you select “Use Git from the Windows Command Prompt”.\nVerify installation by running:\ngit --version\n\n\n\nLinux (Ubuntu):\n\nInstall Git using:\nsudo apt update && sudo apt install git\nVerify installation:\ngit --version\n\n\n\nmacOS:\n\nInstall Git via Homebrew:\nbrew install git\nVerify installation:\ngit --version\n\n\n\n\n5. Python 3.8 or Later\n\nWindows/macOS:\n\nDownload Python from the official website.\nRun the installer and ensure the option “Add Python to PATH” is selected.\nVerify installation:\npython --version\n\n\n\nLinux (Ubuntu):\n\nInstall Python using:\nsudo apt update && sudo apt install python3\nVerify installation:\npython3 --version\n\n\n\n\n6. Poetry\n\nInstall Poetry by running the official script:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify installation:\npoetry --version\n\n\n\n7. Gatorgrade\n\nInstall Gatorgrade using pip:\npip install gatorgrade\nVerify installation:\ngatorgrade --help\n\n\n\n8. SSH Key Setup\n\nGenerate an SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key:\nssh-add ~/.ssh/id_ed25519\nCopy the public key:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account under SSH Settings."
  },
  {
    "objectID": "posts/welcome/index.html#additional-resources",
    "href": "posts/welcome/index.html#additional-resources",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "For more details, refer to the official course software installation guide.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 101 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "about.html#introduction",
    "href": "about.html#introduction",
    "title": "About",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for the Spring semester of the 2024-2025 academic year! This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in Computer and Information Science (CIS) courses get set up with the necessary tools and software for their classes.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\nBelow are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities."
  },
  {
    "objectID": "about.html#acm-required-software",
    "href": "about.html#acm-required-software",
    "title": "About",
    "section": "",
    "text": "Download Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "posts/welcome/index.html#introduction",
    "href": "posts/welcome/index.html#introduction",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 101 - Data Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 101 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/welcome/index.html#cmpsc-101-required-software",
    "href": "posts/welcome/index.html#cmpsc-101-required-software",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Go to GitHub and create an account if you don’t already have one.\nConfirm your email address and set up two-factor authentication for security.\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nInstall Discord and create an account.\nJoin the course-specific Discord server using the invite link provided by your instructor.\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to install.\n\n\n\n\n\nInstall Sublime Text using the following commands:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nsudo apt update && sudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nDrag the Sublime Text icon into the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload Git from git-scm.com.\nFollow the installation wizard and ensure you select “Use Git from the Windows Command Prompt”.\nVerify installation by running:\ngit --version\n\n\n\n\n\n\n\n\n\n\nDownload Python from the official website.\nRun the installer and ensure the option “Add Python to PATH” is selected.\nVerify installation:\npython --version\n\n\n\n\n\n\n\n\n\n\nInstall Poetry by running the official script:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nInstall Gatorgrade using pip:\npip install gatorgrade\nVerify installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nGenerate an SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key:\nssh-add ~/.ssh/id_ed25519\nCopy the public key:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account under SSH Settings."
  }
]